### Find cars using the set of filters
POST http://localhost:8000/cars/find
Accept: application/json
Content-Type: application/json
Authorization: r86gmvwr0qoyjvl4spw9xtxo5civ629k

{
  "required_distance": 7.5,
  "max_price": 32,
  "smokeless": false,
  "allows_children": true,
  "allows_disabled": false,
  "allows_luggage": true,
  "allows_animals": false
}

> {%
    client.assert(response.status == 200)
    client.assert(JSON.stringify(response.body) == JSON.stringify([
        {
            "id": 2,
            "category": "business",
            "price_per_kilometer": 2.5,
            "model": "BMW i3",
            "driver_smokes": true,
            "supports_children": true,
            "supports_disabled": false,
            "supports_luggage": true,
            "supports_animals": false
        },
        {
            "id": 3,
            "category": "eco",
            "price_per_kilometer": 4.2,
            "model": "BMW i7",
            "driver_smokes": true,
            "supports_children": true,
            "supports_disabled": false,
            "supports_luggage": true,
            "supports_animals": false
        }
    ]))
%}

### Ensure that price filter works
POST http://localhost:8000/cars/find
Accept: application/json
Content-Type: application/json
Authorization: r86gmvwr0qoyjvl4spw9xtxo5civ629k

{
  "required_distance": 7.5,
  "max_price": -100,
  "smokeless": false,
  "allows_children": true,
  "allows_disabled": false,
  "allows_luggage": true,
  "allows_animals": false
}

> {%
    client.assert(response.status == 200)
    client.assert(JSON.stringify(response.body) == JSON.stringify([]))
%}

### Authorization filter
POST http://localhost:8000/cars/find
Accept: application/json
Content-Type: application/json
Authorization:

> {%
    client.assert(response.status == 401)
    client.assert(JSON.stringify(response.body) == JSON.stringify({
        "type": "unauthorized",
        "message": "The token '' is not owned by any user"
    }))
%}
